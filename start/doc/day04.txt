	6. 논리연산자
		=> 두 논리값 사이의 관계를 따지는 연산자
		즉, 논리값을 AND, OR, NOT 방식으로 관계를 알아보는 연산자
	
		주의) 데이터는 반드시 논리값이어야 한다.
	
			기호
				&		AND
				|		OR
			
				절삭연산		=> 특정 부분의 계산식은 계산하지 않는다.(읽어보지도 않음)
				&&		AND		앞이 거짓이면 뒤는 읽어보지 않는다.
				||		OR		앞이 참이면 뒤는 읽어보지 않는다.
			
				!		NOT
	
			< 진가표 >
				데이터1		데이터2	|		OR		AND
				true		true	|		true	true
				true		false	|		true	false
				false		true	|		true	false
				false		false	|		false	false
		
		참고) 컴퓨터는 한번의 질문에 오직 한개만 질문할 수 있다.
		즉, 크면 큰거고, 작으면 작은거다. 예를 들어 10에서 20 사이이냐는 질문은 할 수 없다.
		그렇기 때문에 필요한 것이 논리연산자.
	
			예) 데이터가 10에서 20 사이이냐?
				수학에서는 10 < x < 20 으로 생각하지만
				컴퓨터에서는 10 < x && x < 20으로 질문해야한다.
			
		참고) 이 연산자의 결과 역시 논리값이다.
		
	7. 비트연산자
		=> C언어에서 가지고 온 연산자. C언어는 주소를 직접 이용할 수 있으므로 필요했지만,
		자바는 주소를 이용할 수 없으므로 사용하지 않는 연산자.
		
		기호
			&	둘 다 1이면 1 나머지는 0
			|	둘 중 하나라도 1이면 1
			^	두 비트값이 같으면 0 다르면 1

	8. 시프트연산자
		
		기호
			부호 비트는 그대로
			>>
			<<
			
			부호 비트도 시프트
			>>>
			
			~	//보수화연산자(단항연산자)
				=> 각각의 비트의 숫자를 반대로 바꾸는 연산자

	8. 3항연산자(조건연산자)
	=> 연산자라기 보다는 하나의 명령에 가까운 형식을 가지고있는 연산자의 한 종류
	조건에 따라서 처리할 내용을 구분해서 처리하도록 하는 연산자.
	
		형식) 변수 = (조건식) ? (조건식이 참일 때 처리내용(반환값)) : (조건식이 거짓일 때 처리내용(반환값));
		
		참고) 조건식은 반드시 참, 거짓으로만 만들어지도록 처리해야한다.
		
		if 명령을 단순화 시킨 의미를 가진 명령
		
		참고) 모든 연산자가 중첩 처리되듯이 3항조건연산자도 중첩처리 될 수 있다.
		
		예) (조건식1) ? ((조건식2) ? (5) : (6)) : ((조건식3) ? (7) : (8));
			=> 조건식 1이 참이고 조건식 2가 참이면 5, 조건식 2가 거짓이면 6을/
			조건식 1이 거짓이고 조건식 3이 참이면 7을 실행, 거짓이면 8을 실행하세요.
			